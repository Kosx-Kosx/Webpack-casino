/**
 * @fileoverview This file was generated by the Angular template compiler. Do not edit.
 *
 * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}
 * tslint:disable
 */ 
import * as i0 from "@angular/core";
import * as i1 from "@angular/material/checkbox";
import * as i2 from "@angular/common";
import * as i3 from "@angular/cdk/observers";
import * as i4 from "@angular/cdk/bidi";
import * as i5 from "@angular/material/core";
import * as i6 from "@angular/cdk/platform";
import * as i7 from "@angular/platform-browser/animations";
import * as i8 from "@angular/forms";
import * as i9 from "@angular/cdk/a11y";
var MatCheckboxModuleNgFactory = i0.ɵcmf(i1.MatCheckboxModule, [], function (_l) { return i0.ɵmod([i0.ɵmpd(512, i0.ComponentFactoryResolver, i0.ɵCodegenComponentFactoryResolver, [[8, []], [3, i0.ComponentFactoryResolver], i0.NgModuleRef]), i0.ɵmpd(4608, i2.NgLocalization, i2.NgLocaleLocalization, [i0.LOCALE_ID, [2, i2.ɵangular_packages_common_common_a]]), i0.ɵmpd(4608, i3.MutationObserverFactory, i3.MutationObserverFactory, []), i0.ɵmpd(1073742336, i2.CommonModule, i2.CommonModule, []), i0.ɵmpd(1073742336, i4.BidiModule, i4.BidiModule, []), i0.ɵmpd(1073742336, i5.MatCommonModule, i5.MatCommonModule, [[2, i5.MATERIAL_SANITY_CHECKS]]), i0.ɵmpd(1073742336, i6.PlatformModule, i6.PlatformModule, []), i0.ɵmpd(1073742336, i5.MatRippleModule, i5.MatRippleModule, []), i0.ɵmpd(1073742336, i3.ObserversModule, i3.ObserversModule, []), i0.ɵmpd(1073742336, i1.MatCheckboxModule, i1.MatCheckboxModule, []), i0.ɵmpd(256, i0.LOCALE_ID, "en", [])]); });
export { MatCheckboxModuleNgFactory as MatCheckboxModuleNgFactory };
var styles_MatCheckbox = ["@keyframes mat-checkbox-fade-in-background{0%{opacity:0}50%{opacity:1}}@keyframes mat-checkbox-fade-out-background{0%,50%{opacity:1}100%{opacity:0}}@keyframes mat-checkbox-unchecked-checked-checkmark-path{0%,50%{stroke-dashoffset:22.91026}50%{animation-timing-function:cubic-bezier(0,0,.2,.1)}100%{stroke-dashoffset:0}}@keyframes mat-checkbox-unchecked-indeterminate-mixedmark{0%,68.2%{transform:scaleX(0)}68.2%{animation-timing-function:cubic-bezier(0,0,0,1)}100%{transform:scaleX(1)}}@keyframes mat-checkbox-checked-unchecked-checkmark-path{from{animation-timing-function:cubic-bezier(.4,0,1,1);stroke-dashoffset:0}to{stroke-dashoffset:-22.91026}}@keyframes mat-checkbox-checked-indeterminate-checkmark{from{animation-timing-function:cubic-bezier(0,0,.2,.1);opacity:1;transform:rotate(0)}to{opacity:0;transform:rotate(45deg)}}@keyframes mat-checkbox-indeterminate-checked-checkmark{from{animation-timing-function:cubic-bezier(.14,0,0,1);opacity:0;transform:rotate(45deg)}to{opacity:1;transform:rotate(360deg)}}@keyframes mat-checkbox-checked-indeterminate-mixedmark{from{animation-timing-function:cubic-bezier(0,0,.2,.1);opacity:0;transform:rotate(-45deg)}to{opacity:1;transform:rotate(0)}}@keyframes mat-checkbox-indeterminate-checked-mixedmark{from{animation-timing-function:cubic-bezier(.14,0,0,1);opacity:1;transform:rotate(0)}to{opacity:0;transform:rotate(315deg)}}@keyframes mat-checkbox-indeterminate-unchecked-mixedmark{0%{animation-timing-function:linear;opacity:1;transform:scaleX(1)}100%,32.8%{opacity:0;transform:scaleX(0)}}.mat-checkbox-checkmark,.mat-checkbox-mixedmark{width:calc(100% - 4px)}.mat-checkbox-background,.mat-checkbox-frame{top:0;left:0;right:0;bottom:0;position:absolute;border-radius:2px;box-sizing:border-box;pointer-events:none}.mat-checkbox{transition:background .4s cubic-bezier(.25,.8,.25,1),box-shadow 280ms cubic-bezier(.4,0,.2,1);cursor:pointer;-webkit-tap-highlight-color:transparent}._mat-animation-noopable.mat-checkbox{transition:none;animation:none}.mat-checkbox-layout{cursor:inherit;align-items:baseline;vertical-align:middle;display:inline-flex;white-space:nowrap}.mat-checkbox-inner-container{display:inline-block;height:20px;line-height:0;margin:auto;margin-right:8px;order:0;position:relative;vertical-align:middle;white-space:nowrap;width:20px;flex-shrink:0}[dir=rtl] .mat-checkbox-inner-container{margin-left:8px;margin-right:auto}.mat-checkbox-inner-container-no-side-margin{margin-left:0;margin-right:0}.mat-checkbox-frame{background-color:transparent;transition:border-color 90ms cubic-bezier(0,0,.2,.1);border-width:2px;border-style:solid}._mat-animation-noopable .mat-checkbox-frame{transition:none}.mat-checkbox-background{align-items:center;display:inline-flex;justify-content:center;transition:background-color 90ms cubic-bezier(0,0,.2,.1),opacity 90ms cubic-bezier(0,0,.2,.1)}._mat-animation-noopable .mat-checkbox-background{transition:none}.mat-checkbox-checkmark{top:0;left:0;right:0;bottom:0;position:absolute;width:100%}.mat-checkbox-checkmark-path{stroke-dashoffset:22.91026;stroke-dasharray:22.91026;stroke-width:2.66667px}.mat-checkbox-mixedmark{height:2px;opacity:0;transform:scaleX(0) rotate(0)}@media screen and (-ms-high-contrast:active){.mat-checkbox-mixedmark{height:0;border-top:solid 2px;margin-top:2px}}.mat-checkbox-label-before .mat-checkbox-inner-container{order:1;margin-left:8px;margin-right:auto}[dir=rtl] .mat-checkbox-label-before .mat-checkbox-inner-container{margin-left:auto;margin-right:8px}.mat-checkbox-checked .mat-checkbox-checkmark{opacity:1}.mat-checkbox-checked .mat-checkbox-checkmark-path{stroke-dashoffset:0}.mat-checkbox-checked .mat-checkbox-mixedmark{transform:scaleX(1) rotate(-45deg)}.mat-checkbox-indeterminate .mat-checkbox-checkmark{opacity:0;transform:rotate(45deg)}.mat-checkbox-indeterminate .mat-checkbox-checkmark-path{stroke-dashoffset:0}.mat-checkbox-indeterminate .mat-checkbox-mixedmark{opacity:1;transform:scaleX(1) rotate(0)}.mat-checkbox-unchecked .mat-checkbox-background{background-color:transparent}.mat-checkbox-disabled{cursor:default}.mat-checkbox-anim-unchecked-checked .mat-checkbox-background{animation:180ms linear 0s mat-checkbox-fade-in-background}.mat-checkbox-anim-unchecked-checked .mat-checkbox-checkmark-path{animation:180ms linear 0s mat-checkbox-unchecked-checked-checkmark-path}.mat-checkbox-anim-unchecked-indeterminate .mat-checkbox-background{animation:180ms linear 0s mat-checkbox-fade-in-background}.mat-checkbox-anim-unchecked-indeterminate .mat-checkbox-mixedmark{animation:90ms linear 0s mat-checkbox-unchecked-indeterminate-mixedmark}.mat-checkbox-anim-checked-unchecked .mat-checkbox-background{animation:180ms linear 0s mat-checkbox-fade-out-background}.mat-checkbox-anim-checked-unchecked .mat-checkbox-checkmark-path{animation:90ms linear 0s mat-checkbox-checked-unchecked-checkmark-path}.mat-checkbox-anim-checked-indeterminate .mat-checkbox-checkmark{animation:90ms linear 0s mat-checkbox-checked-indeterminate-checkmark}.mat-checkbox-anim-checked-indeterminate .mat-checkbox-mixedmark{animation:90ms linear 0s mat-checkbox-checked-indeterminate-mixedmark}.mat-checkbox-anim-indeterminate-checked .mat-checkbox-checkmark{animation:.5s linear 0s mat-checkbox-indeterminate-checked-checkmark}.mat-checkbox-anim-indeterminate-checked .mat-checkbox-mixedmark{animation:.5s linear 0s mat-checkbox-indeterminate-checked-mixedmark}.mat-checkbox-anim-indeterminate-unchecked .mat-checkbox-background{animation:180ms linear 0s mat-checkbox-fade-out-background}.mat-checkbox-anim-indeterminate-unchecked .mat-checkbox-mixedmark{animation:.3s linear 0s mat-checkbox-indeterminate-unchecked-mixedmark}.mat-checkbox-input{bottom:0;left:50%}.mat-checkbox-ripple{position:absolute;left:calc(50% - 25px);top:calc(50% - 25px);height:50px;width:50px;z-index:1;pointer-events:none}"];
var RenderType_MatCheckbox = i0.ɵcrt({ encapsulation: 2, styles: styles_MatCheckbox, data: {} });
export { RenderType_MatCheckbox as RenderType_MatCheckbox };
export function View_MatCheckbox_0(_l) { return i0.ɵvid(2, [i0.ɵqud(402653184, 1, { _inputElement: 0 }), i0.ɵqud(402653184, 2, { ripple: 0 }), (_l()(), i0.ɵeld(2, 0, [["label", 1]], null, 15, "label", [["class", "mat-checkbox-layout"]], [[1, "for", 0]], null, null, null, null)), (_l()(), i0.ɵeld(3, 0, null, null, 9, "div", [["class", "mat-checkbox-inner-container"]], [[2, "mat-checkbox-inner-container-no-side-margin", null]], null, null, null, null)), (_l()(), i0.ɵeld(4, 0, [[1, 0], ["input", 1]], null, 0, "input", [["class", "mat-checkbox-input cdk-visually-hidden"], ["type", "checkbox"]], [[8, "id", 0], [8, "required", 0], [8, "checked", 0], [1, "value", 0], [8, "disabled", 0], [1, "name", 0], [8, "tabIndex", 0], [8, "indeterminate", 0], [1, "aria-label", 0], [1, "aria-labelledby", 0], [1, "aria-checked", 0]], [[null, "change"], [null, "click"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if (("change" === en)) {
        var pd_0 = (_co._onInteractionEvent($event) !== false);
        ad = (pd_0 && ad);
    } if (("click" === en)) {
        var pd_1 = (_co._onInputClick($event) !== false);
        ad = (pd_1 && ad);
    } return ad; }, null, null)), (_l()(), i0.ɵeld(5, 0, null, null, 2, "div", [["class", "mat-checkbox-ripple mat-ripple"], ["matRipple", ""]], [[2, "mat-ripple-unbounded", null]], null, null, null, null)), i0.ɵdid(6, 212992, [[2, 4]], 0, i5.MatRipple, [i0.ElementRef, i0.NgZone, i6.Platform, [2, i5.MAT_RIPPLE_GLOBAL_OPTIONS], [2, i7.ANIMATION_MODULE_TYPE]], { centered: [0, "centered"], radius: [1, "radius"], animation: [2, "animation"], disabled: [3, "disabled"], trigger: [4, "trigger"] }, null), i0.ɵpod(7, { enterDuration: 0 }), (_l()(), i0.ɵeld(8, 0, null, null, 0, "div", [["class", "mat-checkbox-frame"]], null, null, null, null, null)), (_l()(), i0.ɵeld(9, 0, null, null, 3, "div", [["class", "mat-checkbox-background"]], null, null, null, null, null)), (_l()(), i0.ɵeld(10, 0, null, null, 1, ":svg:svg", [[":xml:space", "preserve"], ["class", "mat-checkbox-checkmark"], ["focusable", "false"], ["version", "1.1"], ["viewBox", "0 0 24 24"]], null, null, null, null, null)), (_l()(), i0.ɵeld(11, 0, null, null, 0, ":svg:path", [["class", "mat-checkbox-checkmark-path"], ["d", "M4.1,12.7 9,17.6 20.3,6.3"], ["fill", "none"], ["stroke", "white"]], null, null, null, null, null)), (_l()(), i0.ɵeld(12, 0, null, null, 0, "div", [["class", "mat-checkbox-mixedmark"]], null, null, null, null, null)), (_l()(), i0.ɵeld(13, 0, [["checkboxLabel", 1]], null, 4, "span", [["class", "mat-checkbox-label"]], null, [[null, "cdkObserveContent"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if (("cdkObserveContent" === en)) {
        var pd_0 = (_co._onLabelTextChange() !== false);
        ad = (pd_0 && ad);
    } return ad; }, null, null)), i0.ɵdid(14, 1196032, null, 0, i3.CdkObserveContent, [i3.ContentObserver, i0.ElementRef, i0.NgZone], null, { event: "cdkObserveContent" }), (_l()(), i0.ɵeld(15, 0, null, null, 1, "span", [["style", "display:none"]], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, ["\u00A0"])), i0.ɵncd(null, 0)], function (_ck, _v) { var _co = _v.component; var currVal_14 = true; var currVal_15 = 25; var currVal_16 = _ck(_v, 7, 0, 150); var currVal_17 = _co._isRippleDisabled(); var currVal_18 = i0.ɵnov(_v, 2); _ck(_v, 6, 0, currVal_14, currVal_15, currVal_16, currVal_17, currVal_18); }, function (_ck, _v) { var _co = _v.component; var currVal_0 = _co.inputId; _ck(_v, 2, 0, currVal_0); var currVal_1 = (!i0.ɵnov(_v, 13).textContent || !i0.ɵnov(_v, 13).textContent.trim()); _ck(_v, 3, 0, currVal_1); var currVal_2 = _co.inputId; var currVal_3 = _co.required; var currVal_4 = _co.checked; var currVal_5 = _co.value; var currVal_6 = _co.disabled; var currVal_7 = _co.name; var currVal_8 = _co.tabIndex; var currVal_9 = _co.indeterminate; var currVal_10 = (_co.ariaLabel || null); var currVal_11 = _co.ariaLabelledby; var currVal_12 = _co._getAriaChecked(); _ck(_v, 4, 1, [currVal_2, currVal_3, currVal_4, currVal_5, currVal_6, currVal_7, currVal_8, currVal_9, currVal_10, currVal_11, currVal_12]); var currVal_13 = i0.ɵnov(_v, 6).unbounded; _ck(_v, 5, 0, currVal_13); }); }
export function View_MatCheckbox_Host_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 2, "mat-checkbox", [["class", "mat-checkbox"]], [[8, "id", 0], [2, "mat-checkbox-indeterminate", null], [2, "mat-checkbox-checked", null], [2, "mat-checkbox-disabled", null], [2, "mat-checkbox-label-before", null], [2, "_mat-animation-noopable", null]], null, null, View_MatCheckbox_0, RenderType_MatCheckbox)), i0.ɵprd(5120, null, i8.NG_VALUE_ACCESSOR, function (p0_0) { return [p0_0]; }, [i1.MatCheckbox]), i0.ɵdid(2, 4374528, null, 0, i1.MatCheckbox, [i0.ElementRef, i0.ChangeDetectorRef, i9.FocusMonitor, i0.NgZone, [8, null], [2, i1.MAT_CHECKBOX_CLICK_ACTION], [2, i7.ANIMATION_MODULE_TYPE]], null, null)], null, function (_ck, _v) { var currVal_0 = i0.ɵnov(_v, 2).id; var currVal_1 = i0.ɵnov(_v, 2).indeterminate; var currVal_2 = i0.ɵnov(_v, 2).checked; var currVal_3 = i0.ɵnov(_v, 2).disabled; var currVal_4 = (i0.ɵnov(_v, 2).labelPosition == "before"); var currVal_5 = (i0.ɵnov(_v, 2)._animationMode === "NoopAnimations"); _ck(_v, 0, 0, currVal_0, currVal_1, currVal_2, currVal_3, currVal_4, currVal_5); }); }
var MatCheckboxNgFactory = i0.ɵccf("mat-checkbox", i1.MatCheckbox, View_MatCheckbox_Host_0, { disableRipple: "disableRipple", color: "color", tabIndex: "tabIndex", ariaLabel: "aria-label", ariaLabelledby: "aria-labelledby", id: "id", required: "required", labelPosition: "labelPosition", name: "name", value: "value", checked: "checked", disabled: "disabled", indeterminate: "indeterminate" }, { change: "change", indeterminateChange: "indeterminateChange" }, ["*"]);
export { MatCheckboxNgFactory as MatCheckboxNgFactory };
